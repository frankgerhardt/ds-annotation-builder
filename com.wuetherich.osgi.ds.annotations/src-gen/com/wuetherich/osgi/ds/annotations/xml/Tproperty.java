//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.02.15 at 06:39:31 AM CET 
//


package com.wuetherich.osgi.ds.annotations.xml;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.namespace.QName;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for Tproperty complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Tproperty">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="type" type="{http://www.osgi.org/xmlns/scr/v1.1.0}Tjava-types" default="String" />
 *       &lt;anyAttribute/>
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Tproperty", propOrder = {
    "value"
})
public class Tproperty implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlValue
    protected String value;
    @XmlAttribute(name = "name", required = true)
    protected String propertyName;
    @XmlAttribute(name = "value")
    protected String propertyValue;
    @XmlAttribute(name = "type")
    protected TjavaTypes propertyType;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the propertyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPropertyName() {
        return propertyName;
    }

    /**
     * Sets the value of the propertyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPropertyName(String value) {
        this.propertyName = value;
    }

    /**
     * Gets the value of the propertyValue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPropertyValue() {
        return propertyValue;
    }

    /**
     * Sets the value of the propertyValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPropertyValue(String value) {
        this.propertyValue = value;
    }

    /**
     * Gets the value of the propertyType property.
     * 
     * @return
     *     possible object is
     *     {@link TjavaTypes }
     *     
     */
    public TjavaTypes getPropertyType() {
        if (propertyType == null) {
            return TjavaTypes.STRING;
        } else {
            return propertyType;
        }
    }

    /**
     * Sets the value of the propertyType property.
     * 
     * @param value
     *     allowed object is
     *     {@link TjavaTypes }
     *     
     */
    public void setPropertyType(TjavaTypes value) {
        this.propertyType = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Tproperty)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Tproperty that = ((Tproperty) object);
        {
            String lhsValue;
            lhsValue = this.getValue();
            String rhsValue;
            rhsValue = that.getValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                return false;
            }
        }
        {
            String lhsPropertyName;
            lhsPropertyName = this.getPropertyName();
            String rhsPropertyName;
            rhsPropertyName = that.getPropertyName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "propertyName", lhsPropertyName), LocatorUtils.property(thatLocator, "propertyName", rhsPropertyName), lhsPropertyName, rhsPropertyName)) {
                return false;
            }
        }
        {
            String lhsPropertyValue;
            lhsPropertyValue = this.getPropertyValue();
            String rhsPropertyValue;
            rhsPropertyValue = that.getPropertyValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "propertyValue", lhsPropertyValue), LocatorUtils.property(thatLocator, "propertyValue", rhsPropertyValue), lhsPropertyValue, rhsPropertyValue)) {
                return false;
            }
        }
        {
            TjavaTypes lhsPropertyType;
            lhsPropertyType = this.getPropertyType();
            TjavaTypes rhsPropertyType;
            rhsPropertyType = that.getPropertyType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "propertyType", lhsPropertyType), LocatorUtils.property(thatLocator, "propertyType", rhsPropertyType), lhsPropertyType, rhsPropertyType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theValue;
            theValue = this.getValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
        }
        {
            String thePropertyName;
            thePropertyName = this.getPropertyName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "propertyName", thePropertyName), currentHashCode, thePropertyName);
        }
        {
            String thePropertyValue;
            thePropertyValue = this.getPropertyValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "propertyValue", thePropertyValue), currentHashCode, thePropertyValue);
        }
        {
            TjavaTypes thePropertyType;
            thePropertyType = this.getPropertyType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "propertyType", thePropertyType), currentHashCode, thePropertyType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theValue;
            theValue = this.getValue();
            strategy.appendField(locator, this, "value", buffer, theValue);
        }
        {
            String thePropertyName;
            thePropertyName = this.getPropertyName();
            strategy.appendField(locator, this, "propertyName", buffer, thePropertyName);
        }
        {
            String thePropertyValue;
            thePropertyValue = this.getPropertyValue();
            strategy.appendField(locator, this, "propertyValue", buffer, thePropertyValue);
        }
        {
            TjavaTypes thePropertyType;
            thePropertyType = this.getPropertyType();
            strategy.appendField(locator, this, "propertyType", buffer, thePropertyType);
        }
        return buffer;
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof Tproperty) {
            final Tproperty copy = ((Tproperty) draftCopy);
            if (this.value!= null) {
                String sourceValue;
                sourceValue = this.getValue();
                String copyValue = ((String) strategy.copy(LocatorUtils.property(locator, "value", sourceValue), sourceValue));
                copy.setValue(copyValue);
            } else {
                copy.value = null;
            }
            if (this.propertyName!= null) {
                String sourcePropertyName;
                sourcePropertyName = this.getPropertyName();
                String copyPropertyName = ((String) strategy.copy(LocatorUtils.property(locator, "propertyName", sourcePropertyName), sourcePropertyName));
                copy.setPropertyName(copyPropertyName);
            } else {
                copy.propertyName = null;
            }
            if (this.propertyValue!= null) {
                String sourcePropertyValue;
                sourcePropertyValue = this.getPropertyValue();
                String copyPropertyValue = ((String) strategy.copy(LocatorUtils.property(locator, "propertyValue", sourcePropertyValue), sourcePropertyValue));
                copy.setPropertyValue(copyPropertyValue);
            } else {
                copy.propertyValue = null;
            }
            if (this.propertyType!= null) {
                TjavaTypes sourcePropertyType;
                sourcePropertyType = this.getPropertyType();
                TjavaTypes copyPropertyType = ((TjavaTypes) strategy.copy(LocatorUtils.property(locator, "propertyType", sourcePropertyType), sourcePropertyType));
                copy.setPropertyType(copyPropertyType);
            } else {
                copy.propertyType = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new Tproperty();
    }

}
